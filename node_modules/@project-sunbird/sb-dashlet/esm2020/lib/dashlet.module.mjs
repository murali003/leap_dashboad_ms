import { NgModule } from '@angular/core';
import { DashletComponent, ChartJsComponent, BigNumberComponent, DtTableComponent, FiltersComponent, MapComponent } from './components/index';
import { ReportWrapperDirective, TemplateRefsDirective } from './directives/index';
import { HttpClientModule } from '@angular/common/http';
import { ChartsModule } from 'ng2-charts';
import { CommonModule } from '@angular/common';
import { DataTablesModule } from "angular-datatables";
import { ReactiveFormsModule } from '@angular/forms';
import { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';
import { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';
import { DATA_SERVICE } from './tokens/index';
import { DataService } from './services/index';
import * as i0 from "@angular/core";
import * as i1 from "ngx-daterangepicker-material";
export class DashletModule {
    static forRoot(config) {
        return {
            ngModule: DashletModule,
            providers: [
                { provide: DATA_SERVICE, useClass: (config && config.dataService) || DataService }
            ]
        };
    }
}
DashletModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: DashletModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DashletModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.3.0", ngImport: i0, type: DashletModule, declarations: [ChartJsComponent, DashletComponent, ReportWrapperDirective, BigNumberComponent, DtTableComponent, TemplateRefsDirective, FiltersComponent, MapComponent], imports: [HttpClientModule, ChartsModule, CommonModule, DataTablesModule, ReactiveFormsModule, NgMultiSelectDropDownModule, i1.NgxDaterangepickerMd], exports: [DashletComponent, TemplateRefsDirective] });
DashletModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: DashletModule, imports: [HttpClientModule, ChartsModule, CommonModule, DataTablesModule, ReactiveFormsModule, NgMultiSelectDropDownModule,
        NgxDaterangepickerMd.forRoot()] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: DashletModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ChartJsComponent, DashletComponent, ReportWrapperDirective, BigNumberComponent, DtTableComponent, TemplateRefsDirective, FiltersComponent, MapComponent],
                    imports: [HttpClientModule, ChartsModule, CommonModule, DataTablesModule, ReactiveFormsModule, NgMultiSelectDropDownModule,
                        NgxDaterangepickerMd.forRoot(),
                    ],
                    exports: [DashletComponent, TemplateRefsDirective]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGxldC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zYi1kYXNobGV0cy9zcmMvbGliL2Rhc2hsZXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM5SSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQTtBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sWUFBWSxDQUFBO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUE7QUFFN0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7QUFXL0MsTUFBTSxPQUFPLGFBQWE7SUFFeEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUF3QjtRQUNyQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxFQUFFO2dCQUNULEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLFdBQVcsRUFBRzthQUNwRjtTQUNGLENBQUE7SUFDSCxDQUFDOzswR0FUVSxhQUFhOzJHQUFiLGFBQWEsaUJBTlAsZ0JBQWdCLEVBQUUsZ0JBQWdCLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUUscUJBQXFCLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxhQUM1SixnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLG1CQUFtQixFQUFFLDJCQUEyQixzQ0FHaEgsZ0JBQWdCLEVBQUUscUJBQXFCOzJHQUV4QyxhQUFhLFlBTFosZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSwyQkFBMkI7UUFDdEgsb0JBQW9CLENBQUMsT0FBTyxFQUFFOzJGQUl6QixhQUFhO2tCQVB6QixRQUFRO21CQUFDO29CQUNOLFlBQVksRUFBRSxDQUFDLGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLHNCQUFzQixFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLHFCQUFxQixFQUFFLGdCQUFnQixFQUFFLFlBQVksQ0FBQztvQkFDdkssT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSwyQkFBMkI7d0JBQ3RILG9CQUFvQixDQUFDLE9BQU8sRUFBRTtxQkFDakM7b0JBQ0QsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUscUJBQXFCLENBQUM7aUJBQ3JEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhc2hsZXRDb21wb25lbnQsIENoYXJ0SnNDb21wb25lbnQsIEJpZ051bWJlckNvbXBvbmVudCwgRHRUYWJsZUNvbXBvbmVudCwgRmlsdGVyc0NvbXBvbmVudCwgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2luZGV4JztcbmltcG9ydCB7IFJlcG9ydFdyYXBwZXJEaXJlY3RpdmUsIFRlbXBsYXRlUmVmc0RpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9pbmRleCc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnXG5pbXBvcnQgeyBDaGFydHNNb2R1bGUgfSBmcm9tICduZzItY2hhcnRzJ1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERhdGFUYWJsZXNNb2R1bGUgfSBmcm9tIFwiYW5ndWxhci1kYXRhdGFibGVzXCI7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTmdNdWx0aVNlbGVjdERyb3BEb3duTW9kdWxlIH0gZnJvbSAnbmctbXVsdGlzZWxlY3QtZHJvcGRvd24nO1xuaW1wb3J0IHsgTmd4RGF0ZXJhbmdlcGlja2VyTWQgfSBmcm9tICduZ3gtZGF0ZXJhbmdlcGlja2VyLW1hdGVyaWFsJztcbmltcG9ydCB7IERBVEFfU0VSVklDRSB9IGZyb20gJy4vdG9rZW5zL2luZGV4J1xuaW1wb3J0IHsgSURhc2hsZXRzQ29uZmlnIH0gZnJvbSAnLi90eXBlcy9pbmRleCc7XG5pbXBvcnQgeyBEYXRhU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvaW5kZXgnO1xuXG5cblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtDaGFydEpzQ29tcG9uZW50LCBEYXNobGV0Q29tcG9uZW50LCBSZXBvcnRXcmFwcGVyRGlyZWN0aXZlLCBCaWdOdW1iZXJDb21wb25lbnQsIER0VGFibGVDb21wb25lbnQsIFRlbXBsYXRlUmVmc0RpcmVjdGl2ZSwgRmlsdGVyc0NvbXBvbmVudCwgTWFwQ29tcG9uZW50XSxcbiAgICBpbXBvcnRzOiBbSHR0cENsaWVudE1vZHVsZSwgQ2hhcnRzTW9kdWxlLCBDb21tb25Nb2R1bGUsIERhdGFUYWJsZXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUsIE5nTXVsdGlTZWxlY3REcm9wRG93bk1vZHVsZSxcbiAgICAgICAgTmd4RGF0ZXJhbmdlcGlja2VyTWQuZm9yUm9vdCgpLFxuICAgIF0sXG4gICAgZXhwb3J0czogW0Rhc2hsZXRDb21wb25lbnQsIFRlbXBsYXRlUmVmc0RpcmVjdGl2ZV1cbn0pXG5leHBvcnQgY2xhc3MgRGFzaGxldE1vZHVsZSB7XG5cbiAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogSURhc2hsZXRzQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxEYXNobGV0TW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBEYXNobGV0TW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogREFUQV9TRVJWSUNFLCB1c2VDbGFzczogKGNvbmZpZyAmJiBjb25maWcuZGF0YVNlcnZpY2UpIHx8IERhdGFTZXJ2aWNlICB9XG4gICAgICBdXG4gICAgfVxuICB9XG59XG4iXX0=